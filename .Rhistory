5+5
a=2
b=5
a*b
a=2
b=5
y=a*b
a*b
a=2
b=5
a*b
y=a*b
object()
objects()
ls()
y=c(1:10)
x=c(1:5)
x=c("cinco";"diez";"ocho";"siete";"nueve")
plot(y)
plot(y,col="red")
plot(y, type=b, col="red")
plot(y,col="red")
y=c(1,2,3,-1,0,-1,2,1,2)
x=c(0,1,2,-2,1,-2,0,-1,1)
fit=lm(y~x)
summary(lm(y~x))
install.packages("tseries")
ausrtaliaRedWine = ts(xcan("clipboard"))
vino=ts(australiaredWine,start=c(1980,1),frequency=12)
vino=ts(scan("clipboard",skip=1), start= c(1980,1),frequency=12)
vino=ts(scan("clipboard",skip=1), start= c(1980,1),frequency=12)
plot(AustraliaredWine)
plot(vino)
sin(2pi/3)
sin(2pi/3)
sin(2*pi/3)
5^2
5**2
log(1)
x<-c(1,2,3,4,5)
c(1,2,3,4,5)*2
x*
x*
x*2
2->y
y
(x<-c(1,2,3,4,5))
2*8*10+exp(1)
2*8*
2*8*
10+
2*8*
10+
exp(1)
x
log(3)
log(x=3)
log(x=3,base=exp(1))
log(x=3,exp(1))
log(3,base=exp(1))
log(3,exp(1))
log(base=exp(1),3)
help(log)
factorial(6)
date
date()
binomial <- function(n,p) factorial(n)/(factorial(p)*factorial(n-p))
binomial(4,3)
typeof(x)
c<-as.integer(a)
c<-as.integer(1)
typeof(c)
c(b>a, a==b)
b<-3,4
c(b>a, a==b
c(b>a, a==b)
b <- 3,4
b<- 3,4
b<-3,4
b< -3,4
b< -3,4
c<-as.integer(a)
c(b>a, a==b)
x<-c(3,NA,6)
is.na(x)
mean(x)
mean(x,na,rm=T)
mean(x,na,rm = T)
mean(x, na.rm = T)
a<- "R es mi amigo"
mode(a)
is.character(a)
is.numeric(a)
c(3,1,7)
c(3,faslse,7) # cinversion automatica
c(3,FALSE,7) # cinversion automatica
c(3,FALSE,7) # cOnversion automatica
SEQ(from=0,to=1,by=0,1)
SEQ(from=0,to=1,by=0.1)
seq(from=0,to=1,by=0.1)
seq(from=0,to=20,length=6)
(vec <- 2:33) # [17] = ubicacion de un elemento
source('~/.active-rstudio-document', echo=TRUE)
(vec <- 2:33) # [17] = ubicacion de un elemento
vec <- 1:10 # almacenados como enteros
names(vec) <- letters[1:10]
(vec <- 2:33) # [17] = ubicacion de un elemento
(x<- matrix(1:12,nrow=4,ncol=3,byrow=TRUE))
ident <- diag(3) # genera matriz identidad de 3x3
dim(x) # dimension de laa matriz
y <- t(x) # matriz traspuesta de x
z <- t(x)%%x # producto matricial: t(x)*x
z <- t(x)*x # producto matricial: t(x)*x
z <- t(x)%*%x # producto matricial: t(x)*x
h=2
w <- x*h # x*h multiplica elemento a elemento
( x <- matrix(c(2,24,10,3),nrow=2,ncol=2,byrow=TRUE))
Z <- SOLVE(X)
z <- solve(x)
( A<- list(TRUE,-1:3,my.matrix=matrix(1:4,nrow=2),))
+WEIGHT=C(67,58,66,48,75,55), row.names=c("jack","julia","henry","emma","william","elsa")
view(BMI)
( BMI <- data.frame(gender=c("M","F","M","F","M","F"),
+HEIGHT=C(1.83,1.76,1.82,1.60,1.90,1.66)
+WEIGHT=C(67,58,66,48,75,55), row.names=c("jack","julia","henry","emma","william","elsa")))
( BMI <- data.frame(gender=c("M","F","M","F","M","F"),
+HEIGHT=C(1.83,1.76,1.82,1.60,1.90,1.66),
+WEIGHT=C(67,58,66,48,75,55), row.names=c("jack","julia","henry","emma","william","elsa")))
( BMI <- data.frame(gender=c("M","F","M","F","M","F"),
HEIGHT=C(1.83,1.76,1.82,1.60,1.90,1.66),
WEIGHT=C(67,58,66,48,75,55), row.names=c("jack","julia","henry","emma","william","elsa")))
( BMI <- data.frame(Gender=c("M","F","M","F","M","F"),
Height=C(1.83,1.76,1.82,1.60,1.90,1.66),
Weight=C(67,58,66,48,75,55), row.names=c("jack","julia","henry","emma","william","elsa")))
View(BMI)
setwd("~/Tarea_3")
listaDeNumeros <- list(2,5,6,2,1,5,6,10,11,20,15)
listaDeNumeros[5]
listaDeNumeros[0]
listaDeNumeros[0]
listaDeNumeros[10]
listaDeNumeros[15]
listaDeNumeros[-7]
listaDeNumeros[-6]
unlist (listaDeNumeros[5])
listaDeNumeros[10]
if  (listaDeNumeros[5]>4)
print("verdadero")
if  (listaDeNumeros[5]>4){
print("verdadero")
}
if(listaDeNumeros[5]>4){
print("verdadero")
}
unlist (listaDeNumeros[5])
if(listaDeNumeros[5]>4){
print("verdadero")
}
if(listaDeNumeros[5]>1){
print("verdadero")
}
if(listaDeNumeros[5]>1){
print("VERDADERO")
}
if(listaDeNumeros[5]>1){
print("VERDADERO")
}
if(listaDeNumeros[5]>1){
print("VERDADERO")
if(listaDeNumeros[5]>7){
print("VERDADERO")
if(listaDeNumeros[3]>7){
print("VERDADERO")
}
if(listaDeNumeros[3]>8){
print("VERDADERO"
if(listaDeNumeros[3]>0){
print("VERDADERO")
}
if(listaDeNumeros[3]>0){
print("VERDADERO")
}
if(listaDeNumeros[5]>0){
print("VERDADERO")
}
if(listaDeNumeros[5]>3){
print("VERDADERO")
}
if(listaDeNumeros[5]+1>0){
print("VERDADERO")
if(listaDeNumeros[5]+1>1){
print("VERDADERO")
if(listaDeNumeros[5]+1>1){
print("VERDADERO")
}
}
if(umlist(variable[5]+1>1))
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(umlist(variable[5]+1>1)){
print("VERDADERO")
}
if(unlist(variable[5]+1>1)){
print("VERDADERO")
}
unlist(listaDeNumeros[5])
if(listaDeNumeros[5]+1>1){
print("VERDADERO")
}
if(unlist(variable[5]+1>1)){
print("VERDADERO")
}
listaDeNumeros[5]
listaDeNumeros[0]
listaDeNumeros[10]
listaDeNumeros[15]
listaDeNumeros[-6]
unlist(listaDeNumeros[5])
if(listaDeNumeros[5]+1>1){
print("VERDADERO")
}
listaDeNumeros <- list(2,5,6,2,1,5,6,10,11,20,15)
listaDeNumeros[5]
listaDeNumeros[0]
